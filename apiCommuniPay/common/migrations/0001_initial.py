# Generated by Django 4.2.23 on 2025-08-26 14:25

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('projects', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TelegramChat',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('tg_id', models.BigIntegerField(unique=True)),
                ('type', models.CharField(choices=[('channel', 'Channel'), ('supergroup', 'Supergroup'), ('group', 'Group'), ('private', 'Private')], max_length=32)),
                ('title', models.CharField(blank=True, default='', max_length=256)),
                ('username', models.CharField(blank=True, default='', max_length=256)),
                ('status', models.CharField(choices=[('active', 'Активен'), ('pending_rights', 'Требуются права'), ('inactive', 'Неактивен')], db_index=True, default='pending_rights', max_length=32)),
                ('added_by', models.PositiveBigIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('can_invite_users', models.BooleanField(default=False)),
                ('join_by_request', models.BooleanField(default=False)),
                ('last_synced_at', models.DateTimeField(blank=True, null=True)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='telegram_chats', to='projects.project')),
            ],
            options={
                'verbose_name': 'телеграм-чат',
                'verbose_name_plural': 'телеграм-чаты',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['project', 'status'], name='tgchat_project_status')],
            },
        ),
        migrations.CreateModel(
            name='ChatLinkIntent',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('token', models.CharField(max_length=64, unique=True)),
                ('tg_user_id', models.PositiveBigIntegerField(blank=True, db_index=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('tg_request_id', models.PositiveBigIntegerField(blank=True, db_index=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('chat_id', models.PositiveBigIntegerField(blank=True, db_index=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('status', models.CharField(choices=[('pending', 'Ожидает'), ('consumed', 'Использовано'), ('expired', 'Просрочено'), ('cancelled', 'Отменено')], db_index=True, default='pending', max_length=16)),
                ('expires_at', models.DateTimeField(db_index=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('consumed_at', models.DateTimeField(blank=True, null=True)),
                ('initiator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='link_intents', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='link_intents', to='projects.project')),
            ],
            options={
                'verbose_name': 'намерение привязки чата',
                'verbose_name_plural': 'намерения привязки чатов',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status', 'expires_at'], name='intent_status_exp'), models.Index(fields=['tg_user_id', 'status', 'expires_at'], name='intent_user_status_exp'), models.Index(fields=['tg_request_id', 'status', 'expires_at'], name='intent_req_status_exp')],
            },
        ),
        migrations.AddConstraint(
            model_name='chatlinkintent',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('consumed_at__isnull', False), ('status', 'consumed')), models.Q(('status', 'consumed'), _negated=True), _connector='OR'), name='intent_consumed_has_ts'),
        ),
        migrations.AddConstraint(
            model_name='chatlinkintent',
            constraint=models.CheckConstraint(check=models.Q(('consumed_at__isnull', True), ('status', 'consumed'), _connector='OR'), name='intent_ts_means_consumed'),
        ),
    ]
